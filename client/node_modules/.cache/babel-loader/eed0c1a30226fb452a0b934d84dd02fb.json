{"ast":null,"code":"import _classCallCheck from \"/Users/kylewiltshire/Documents/projects/2019/Javascript/playground/monten/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kylewiltshire/Documents/projects/2019/Javascript/playground/monten/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kylewiltshire/Documents/projects/2019/Javascript/playground/monten/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kylewiltshire/Documents/projects/2019/Javascript/playground/monten/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kylewiltshire/Documents/projects/2019/Javascript/playground/monten/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kylewiltshire/Documents/projects/2019/Javascript/playground/monten/client/src/components/Transactions/TransactionList.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport TransactionItem from \"./TransactionItem\";\nimport Spinner from \"../Spinner\";\nimport { fetchTransactions } from \"../../actions\";\nimport Pagination from \"../Pagination\"; // DON'T FORGET TO SPECIFY THIS. WHEN CALLING FUNCTIONS\n\nvar TransactionList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TransactionList, _Component);\n\n  function TransactionList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TransactionList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TransactionList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      allTransactions: [],\n      currenTransactions: [],\n      currentPage: null,\n      totalPages: null\n    };\n\n    _this.onPageChanged = function (data) {\n      var transactions = _this.props.transactions;\n      var currentPage = data.currentPage,\n          totalPages = data.totalPages,\n          pageLimit = data.pageLimit;\n      var offset = (currentPage - 1) * pageLimit;\n      var currenTransactions = transactions.slice(offset, offset + pageLimit);\n\n      _this.setState({\n        currentPage: currentPage,\n        currenTransactions: currenTransactions,\n        totalPages: totalPages\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TransactionList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props$fetchTran = this.props.fetchTransactions(),\n          _this$props$fetchTran2 = _this$props$fetchTran.data,\n          allTransactions = _this$props$fetchTran2 === void 0 ? [] : _this$props$fetchTran2;\n\n      this.setState({\n        allTransactions: allTransactions\n      });\n    }\n  }, {\n    key: \"renderTransactions\",\n    value: function renderTransactions() {\n      return this.props.transactions.map(function (_ref) {\n        var date = _ref.date,\n            description = _ref.description,\n            category = _ref.category,\n            amount = _ref.amount,\n            id = _ref.id;\n        return React.createElement(TransactionItem, {\n          date: date,\n          description: description,\n          category: category,\n          amount: amount,\n          key: id,\n          id: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.transactions);\n      var _this$state = this.state,\n          allTransactions = _this$state.allTransactions,\n          currenTransactions = _this$state.currenTransactions,\n          currentPage = _this$state.currentPage,\n          totalPages = _this$state.totalPages;\n      var totalTransactions = allTransactions.length;\n\n      if (this.props.transactions.length === 0) {\n        return React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"ui celled table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Category\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Amount\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Actions\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.renderTransactions())), React.createElement(Pagination, {\n        totalRecords: totalTransactions,\n        pageLimit: 18,\n        pageNeighbours: 1,\n        onPageChanged: this.onPageChanged,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TransactionList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    transactions: Object.values(state.transactions)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchTransactions: fetchTransactions\n})(TransactionList);","map":{"version":3,"sources":["/Users/kylewiltshire/Documents/projects/2019/Javascript/playground/monten/client/src/components/Transactions/TransactionList.js"],"names":["React","Component","connect","TransactionItem","Spinner","fetchTransactions","Pagination","TransactionList","state","allTransactions","currenTransactions","currentPage","totalPages","onPageChanged","data","transactions","props","pageLimit","offset","slice","setState","map","date","description","category","amount","id","console","log","totalTransactions","length","renderTransactions","mapStateToProps","Object","values"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport TransactionItem from \"./TransactionItem\";\nimport Spinner from \"../Spinner\";\nimport { fetchTransactions } from \"../../actions\";\nimport Pagination from \"../Pagination\";\n\n// DON'T FORGET TO SPECIFY THIS. WHEN CALLING FUNCTIONS\n\nclass TransactionList extends Component {\n  state = {\n    allTransactions: [],\n    currenTransactions: [],\n    currentPage: null,\n    totalPages: null\n  };\n\n  componentDidMount() {\n    const { data: allTransactions = [] } = this.props.fetchTransactions();\n    this.setState({ allTransactions });\n  }\n\n  onPageChanged = data => {\n    const { transactions } = this.props;\n    const { currentPage, totalPages, pageLimit } = data;\n\n    const offset = (currentPage - 1) * pageLimit;\n    const currenTransactions = transactions.slice(offset, offset + pageLimit);\n\n    this.setState({ currentPage, currenTransactions, totalPages });\n  };\n\n  renderTransactions() {\n    return this.props.transactions.map(\n      ({ date, description, category, amount, id }) => {\n        return (\n          <TransactionItem\n            date={date}\n            description={description}\n            category={category}\n            amount={amount}\n            key={id}\n            id={id}\n          />\n        );\n      }\n    );\n  }\n\n  render() {\n    console.log(this.props.transactions);\n    const {\n      allTransactions,\n      currenTransactions,\n      currentPage,\n      totalPages\n    } = this.state;\n    const totalTransactions = allTransactions.length;\n\n    if (this.props.transactions.length === 0) {\n      return <Spinner />;\n    }\n\n    return (\n      <div>\n        <table className=\"ui celled table\">\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>Description</th>\n              <th>Category</th>\n              <th>Amount</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>{this.renderTransactions()}</tbody>\n        </table>\n        <Pagination\n          totalRecords={totalTransactions}\n          pageLimit={18}\n          pageNeighbours={1}\n          onPageChanged={this.onPageChanged}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    transactions: Object.values(state.transactions)\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchTransactions }\n)(TransactionList);\n"]},"metadata":{},"sourceType":"module"}