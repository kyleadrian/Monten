{"ast":null,"code":"import _classCallCheck from \"/Users/kylewiltshire/Documents/projects/2019/Javascript/playground/monten/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kylewiltshire/Documents/projects/2019/Javascript/playground/monten/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kylewiltshire/Documents/projects/2019/Javascript/playground/monten/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kylewiltshire/Documents/projects/2019/Javascript/playground/monten/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kylewiltshire/Documents/projects/2019/Javascript/playground/monten/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kylewiltshire/Documents/projects/2019/Javascript/playground/monten/client/src/components/Snapshots/NetSpendSnapshot.js\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport React, { Component, Fragment } from \"react\"; // To do refactor this component to be the page that renders all of the cards with the data. For instance spending card, networth card, graph of increase in spend etc.\n\nvar Snapshot =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Snapshot, _Component);\n\n  function Snapshot() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Snapshot);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Snapshot)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.calculateIncome = function (transactions) {\n      var income = _.chain(transactions).filter(function (transaction) {\n        var todaysDate = moment().format(\"MM/DD/YYYY\");\n        var oneWeekAgo = moment().subtract(7, \"days\").calendar();\n        var oneMonthAgo = moment().subtract(30, \"days\").calendar();\n        var oneYearAgo = moment().subtract(365, \"days\").calendar();\n        if (transaction.category === \"Paycheck\" && moment(transaction.date).isAfter(oneMonthAgo)) return transaction;\n      }).map(function (transaction) {\n        return transaction.amount;\n      }).sum().value();\n\n      return income.toFixed(2);\n    };\n\n    _this.calculateExpenses = function (transactions) {\n      // TO DO find a way to refactor;\n      var toRemove = [];\n      var todaysDate = moment().format(\"MM/DD/YYYY\");\n      var oneWeekAgo = moment().subtract(7, \"days\").calendar();\n      var oneMonthAgo = moment().subtract(30, \"days\").calendar();\n      var oneYearAgo = moment().subtract(365, \"days\").calendar();\n\n      _.map(transactions, function (transaction) {\n        if (transaction.category === \"Credit Card Payment\" || transaction.category === \"Transfer\") {\n          toRemove.push(transaction);\n        }\n      });\n\n      var filteredTransactions = _.filter(transactions, function (transaction) {\n        return !toRemove.includes(transaction);\n      });\n\n      var totalSpent = _.chain(filteredTransactions).map(function (transaction) {\n        if (moment(transaction.date).isAfter(oneMonthAgo)) {\n          return transaction.amount;\n        }\n      }).sum().value();\n\n      return totalSpent.toFixed(2);\n    };\n\n    _this.calculateNet = function () {\n      var income = _this.calculateIncome(_this.props.transactions);\n\n      var expenses = _this.calculateExpenses(_this.props.transactions);\n\n      return (income - expenses).toFixed(2);\n    };\n\n    return _this;\n  }\n\n  _createClass(Snapshot, [{\n    key: \"changeDate\",\n    value: function changeDate(date) {\n      return date;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.transactions) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Net Spend\")), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"ui sub header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Income: $\", this.calculateIncome(this.props.transactions)), React.createElement(\"h4\", {\n        className: \"ui sub header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Spent: $\", this.calculateExpenses(this.props.transactions)), React.createElement(\"h4\", {\n        className: \"ui sub header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Net: $\", this.calculateNet()))));\n    }\n  }]);\n\n  return Snapshot;\n}(Component);\n\nexport default Snapshot;","map":{"version":3,"sources":["/Users/kylewiltshire/Documents/projects/2019/Javascript/playground/monten/client/src/components/Snapshots/NetSpendSnapshot.js"],"names":["_","moment","React","Component","Fragment","Snapshot","calculateIncome","transactions","income","chain","filter","transaction","todaysDate","format","oneWeekAgo","subtract","calendar","oneMonthAgo","oneYearAgo","category","date","isAfter","map","amount","sum","value","toFixed","calculateExpenses","toRemove","push","filteredTransactions","includes","totalSpent","calculateNet","props","expenses"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport moment from \"moment\";\nimport React, { Component, Fragment } from \"react\";\n\n// To do refactor this component to be the page that renders all of the cards with the data. For instance spending card, networth card, graph of increase in spend etc.\n\nclass Snapshot extends Component {\n  changeDate(date) {\n    return date;\n  }\n\n  calculateIncome = transactions => {\n    const income = _.chain(transactions)\n      .filter(transaction => {\n        const todaysDate = moment().format(\"MM/DD/YYYY\");\n        const oneWeekAgo = moment()\n          .subtract(7, \"days\")\n          .calendar();\n        const oneMonthAgo = moment()\n          .subtract(30, \"days\")\n          .calendar();\n        const oneYearAgo = moment()\n          .subtract(365, \"days\")\n          .calendar();\n        if (\n          transaction.category === \"Paycheck\" &&\n          moment(transaction.date).isAfter(oneMonthAgo)\n        )\n          return transaction;\n      })\n      .map(transaction => {\n        return transaction.amount;\n      })\n      .sum()\n      .value();\n\n    return income.toFixed(2);\n  };\n\n  calculateExpenses = transactions => {\n    // TO DO find a way to refactor;\n    const toRemove = [];\n\n    const todaysDate = moment().format(\"MM/DD/YYYY\");\n    const oneWeekAgo = moment()\n      .subtract(7, \"days\")\n      .calendar();\n    const oneMonthAgo = moment()\n      .subtract(30, \"days\")\n      .calendar();\n    const oneYearAgo = moment()\n      .subtract(365, \"days\")\n      .calendar();\n\n    _.map(transactions, transaction => {\n      if (\n        transaction.category === \"Credit Card Payment\" ||\n        transaction.category === \"Transfer\"\n      ) {\n        toRemove.push(transaction);\n      }\n    });\n\n    const filteredTransactions = _.filter(transactions, transaction => {\n      return !toRemove.includes(transaction);\n    });\n\n    const totalSpent = _.chain(filteredTransactions)\n\n      .map(transaction => {\n        if (moment(transaction.date).isAfter(oneMonthAgo)) {\n          return transaction.amount;\n        }\n      })\n      .sum()\n      .value();\n\n    return totalSpent.toFixed(2);\n  };\n\n  calculateNet = () => {\n    const income = this.calculateIncome(this.props.transactions);\n    const expenses = this.calculateExpenses(this.props.transactions);\n\n    return (income - expenses).toFixed(2);\n  };\n\n  render() {\n    if (!this.props.transactions) {\n      return <div>Loading...</div>;\n    }\n    return (\n      <Fragment>\n        <div className=\"ui card\">\n          <div className=\"content\">\n            <div className=\"header\">Net Spend</div>\n          </div>\n          <div className=\"content\">\n            <h4 className=\"ui sub header\">\n              Income: ${this.calculateIncome(this.props.transactions)}\n            </h4>\n            <h4 className=\"ui sub header\">\n              Spent: ${this.calculateExpenses(this.props.transactions)}\n            </h4>\n            <h4 className=\"ui sub header\">Net: ${this.calculateNet()}</h4>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Snapshot;\n"]},"metadata":{},"sourceType":"module"}