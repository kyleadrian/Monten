{"ast":null,"code":"import _ from \"lodash\";\nimport moment from \"moment\";\nexport var dateRanges = {\n  todaysDate: moment().format(\"MM/DD/YYYY\"),\n  oneWeekAgo: moment().subtract(7, \"days\").calendar(),\n  oneMonthAgo: moment().subtract(30, \"days\").calendar(),\n  oneYearAgo: moment().subtract(365, \"days\").calendar()\n};\n/**\n * NET SPEND HELPERS ==========================================================================================================================================\n */\n\nexport var calculateIncome = function calculateIncome(transactions, date) {\n  var income = _.chain(transactions).filter(function (transaction) {\n    if (transaction.category === \"Paycheck\" && moment(transaction.date).isAfter(date)) return transaction;\n  }).map(function (transaction) {\n    return transaction.amount;\n  }).sum().value();\n\n  return income.toFixed(2);\n};\nexport var calculateExpenses = function calculateExpenses(transactions, date) {\n  var toRemove = [];\n  transactions.map(function (transaction) {\n    if (transaction.category === \"Credit Card Payment\" || transaction.category === \"Transfer\") {\n      toRemove.push(transaction);\n    }\n  });\n  console.log(toRemove);\n  var filteredTransactions = transactions.filter(function (transaction) {\n    return !toRemove.includes(transaction);\n  });\n  var expenseAmounts = filteredTransactions.map(function (transaction) {\n    if (moment(transaction.date).isAfter(dateRanges.oneMonthAgo)) {\n      return transaction.amount;\n    }\n  });\n  var totalSpent = expenseAmounts.reduce(function (previous, amount) {\n    return previous + amount;\n  });\n  console.log(totalSpent);\n  return totalSpent.toFixed(2);\n};\nexport var calculateNet = function calculateNet(transactions) {\n  var income = calculateIncome(transactions);\n  var expenses = calculateExpenses(transactions);\n  return (income - expenses).toFixed(2);\n}; // =====================================================================================================================================================================\n\n/* export const calculateExpenses = (transactions, date) => {\n  const toRemove = [];\n\n  _.map(transactions, transaction => {\n    if (\n      transaction.category === \"Credit Card Payment\" ||\n      transaction.category === \"Transfer\"\n    ) {\n      toRemove.push(transaction);\n    }\n  });\n\n  const filteredTransactions = _.filter(transactions, transaction => {\n    return !toRemove.includes(transaction);\n  });\n\n  const totalSpent = _.chain(filteredTransactions)\n    .map(transaction => {\n      if (moment(transaction.date).isAfter(dateRanges.oneMonthAgo)) {\n        return transaction.amount;\n      }\n    })\n    .sum()\n    .value();\n  console.log(totalSpent);\n  return totalSpent.toFixed(2);\n}; */","map":{"version":3,"sources":["/Users/kylewiltshire/Documents/projects/2019/Javascript/playground/monten/client/src/helpers/snapshotHelpers.js"],"names":["_","moment","dateRanges","todaysDate","format","oneWeekAgo","subtract","calendar","oneMonthAgo","oneYearAgo","calculateIncome","transactions","date","income","chain","filter","transaction","category","isAfter","map","amount","sum","value","toFixed","calculateExpenses","toRemove","push","console","log","filteredTransactions","includes","expenseAmounts","totalSpent","reduce","previous","calculateNet","expenses"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAO,IAAMC,UAAU,GAAG;AACxBC,EAAAA,UAAU,EAAEF,MAAM,GAAGG,MAAT,CAAgB,YAAhB,CADY;AAExBC,EAAAA,UAAU,EAAEJ,MAAM,GACfK,QADS,CACA,CADA,EACG,MADH,EAETC,QAFS,EAFY;AAKxBC,EAAAA,WAAW,EAAEP,MAAM,GAChBK,QADU,CACD,EADC,EACG,MADH,EAEVC,QAFU,EALW;AAQxBE,EAAAA,UAAU,EAAER,MAAM,GACfK,QADS,CACA,GADA,EACK,MADL,EAETC,QAFS;AARY,CAAnB;AAaP;;;;AAGA,OAAO,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACC,YAAD,EAAeC,IAAf,EAAwB;AACrD,MAAMC,MAAM,GAAGb,CAAC,CAACc,KAAF,CAAQH,YAAR,EACZI,MADY,CACL,UAAAC,WAAW,EAAI;AACrB,QACEA,WAAW,CAACC,QAAZ,KAAyB,UAAzB,IACAhB,MAAM,CAACe,WAAW,CAACJ,IAAb,CAAN,CAAyBM,OAAzB,CAAiCN,IAAjC,CAFF,EAIE,OAAOI,WAAP;AACH,GAPY,EAQZG,GARY,CAQR,UAAAH,WAAW,EAAI;AAClB,WAAOA,WAAW,CAACI,MAAnB;AACD,GAVY,EAWZC,GAXY,GAYZC,KAZY,EAAf;;AAcA,SAAOT,MAAM,CAACU,OAAP,CAAe,CAAf,CAAP;AACD,CAhBM;AAkBP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACb,YAAD,EAAeC,IAAf,EAAwB;AACvD,MAAMa,QAAQ,GAAG,EAAjB;AAEAd,EAAAA,YAAY,CAACQ,GAAb,CAAiB,UAAAH,WAAW,EAAI;AAC9B,QACEA,WAAW,CAACC,QAAZ,KAAyB,qBAAzB,IACAD,WAAW,CAACC,QAAZ,KAAyB,UAF3B,EAGE;AACAQ,MAAAA,QAAQ,CAACC,IAAT,CAAcV,WAAd;AACD;AACF,GAPD;AASAW,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEA,MAAMI,oBAAoB,GAAGlB,YAAY,CAACI,MAAb,CAAoB,UAAAC,WAAW,EAAI;AAC9D,WAAO,CAACS,QAAQ,CAACK,QAAT,CAAkBd,WAAlB,CAAR;AACD,GAF4B,CAA7B;AAIA,MAAMe,cAAc,GAAGF,oBAAoB,CAACV,GAArB,CAAyB,UAAAH,WAAW,EAAI;AAC7D,QAAIf,MAAM,CAACe,WAAW,CAACJ,IAAb,CAAN,CAAyBM,OAAzB,CAAiChB,UAAU,CAACM,WAA5C,CAAJ,EAA8D;AAC5D,aAAOQ,WAAW,CAACI,MAAnB;AACD;AACF,GAJsB,CAAvB;AAMA,MAAMY,UAAU,GAAGD,cAAc,CAACE,MAAf,CAAsB,UAACC,QAAD,EAAWd,MAAX,EAAsB;AAC7D,WAAOc,QAAQ,GAAGd,MAAlB;AACD,GAFkB,CAAnB;AAIAO,EAAAA,OAAO,CAACC,GAAR,CAAYI,UAAZ;AACA,SAAOA,UAAU,CAACT,OAAX,CAAmB,CAAnB,CAAP;AACD,CA9BM;AAgCP,OAAO,IAAMY,YAAY,GAAG,SAAfA,YAAe,CAAAxB,YAAY,EAAI;AAC1C,MAAME,MAAM,GAAGH,eAAe,CAACC,YAAD,CAA9B;AACA,MAAMyB,QAAQ,GAAGZ,iBAAiB,CAACb,YAAD,CAAlC;AAEA,SAAO,CAACE,MAAM,GAAGuB,QAAV,EAAoBb,OAApB,CAA4B,CAA5B,CAAP;AACD,CALM,C,CAOP;;AAEA","sourcesContent":["import _ from \"lodash\";\nimport moment from \"moment\";\n\nexport const dateRanges = {\n  todaysDate: moment().format(\"MM/DD/YYYY\"),\n  oneWeekAgo: moment()\n    .subtract(7, \"days\")\n    .calendar(),\n  oneMonthAgo: moment()\n    .subtract(30, \"days\")\n    .calendar(),\n  oneYearAgo: moment()\n    .subtract(365, \"days\")\n    .calendar()\n};\n\n/**\n * NET SPEND HELPERS ==========================================================================================================================================\n */\nexport const calculateIncome = (transactions, date) => {\n  const income = _.chain(transactions)\n    .filter(transaction => {\n      if (\n        transaction.category === \"Paycheck\" &&\n        moment(transaction.date).isAfter(date)\n      )\n        return transaction;\n    })\n    .map(transaction => {\n      return transaction.amount;\n    })\n    .sum()\n    .value();\n\n  return income.toFixed(2);\n};\n\nexport const calculateExpenses = (transactions, date) => {\n  const toRemove = [];\n\n  transactions.map(transaction => {\n    if (\n      transaction.category === \"Credit Card Payment\" ||\n      transaction.category === \"Transfer\"\n    ) {\n      toRemove.push(transaction);\n    }\n  });\n\n  console.log(toRemove);\n\n  const filteredTransactions = transactions.filter(transaction => {\n    return !toRemove.includes(transaction);\n  });\n\n  const expenseAmounts = filteredTransactions.map(transaction => {\n    if (moment(transaction.date).isAfter(dateRanges.oneMonthAgo)) {\n      return transaction.amount;\n    }\n  });\n\n  const totalSpent = expenseAmounts.reduce((previous, amount) => {\n    return previous + amount;\n  });\n\n  console.log(totalSpent);\n  return totalSpent.toFixed(2);\n};\n\nexport const calculateNet = transactions => {\n  const income = calculateIncome(transactions);\n  const expenses = calculateExpenses(transactions);\n\n  return (income - expenses).toFixed(2);\n};\n\n// =====================================================================================================================================================================\n\n/* export const calculateExpenses = (transactions, date) => {\n  const toRemove = [];\n\n  _.map(transactions, transaction => {\n    if (\n      transaction.category === \"Credit Card Payment\" ||\n      transaction.category === \"Transfer\"\n    ) {\n      toRemove.push(transaction);\n    }\n  });\n\n  const filteredTransactions = _.filter(transactions, transaction => {\n    return !toRemove.includes(transaction);\n  });\n\n  const totalSpent = _.chain(filteredTransactions)\n    .map(transaction => {\n      if (moment(transaction.date).isAfter(dateRanges.oneMonthAgo)) {\n        return transaction.amount;\n      }\n    })\n    .sum()\n    .value();\n  console.log(totalSpent);\n  return totalSpent.toFixed(2);\n}; */\n"]},"metadata":{},"sourceType":"module"}