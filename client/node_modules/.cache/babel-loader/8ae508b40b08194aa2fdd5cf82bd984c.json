{"ast":null,"code":"import _ from \"lodash\";\nimport moment from \"moment\";\n/**\n * NET SPEND HELPERS ==========================================================================================================================================\n */\n\nexport var calculateIncome = function calculateIncome(transactions, date) {\n  var income = _.chain(transactions).filter(function (transaction) {\n    var todaysDate = moment().format(\"MM/DD/YYYY\");\n    var oneWeekAgo = moment().subtract(7, \"days\").calendar();\n    var oneMonthAgo = moment().subtract(30, \"days\").calendar();\n    var oneYearAgo = moment().subtract(365, \"days\").calendar();\n    if (transaction.category === \"Paycheck\" && moment(transaction.date).isAfter(date)) return transaction;\n  }).map(function (transaction) {\n    return transaction.amount;\n  }).sum().value();\n\n  return income.toFixed(2);\n};\nexport var calculateExpenses = function calculateExpenses(transactions, date) {\n  // TO DO find a way to refactor;\n  var toRemove = [];\n  var todaysDate = moment().format(\"MM/DD/YYYY\");\n  var oneWeekAgo = moment().subtract(7, \"days\").calendar();\n  var oneMonthAgo = moment().subtract(30, \"days\").calendar();\n  var oneYearAgo = moment().subtract(365, \"days\").calendar();\n\n  _.map(transactions, function (transaction) {\n    if (transaction.category === \"Credit Card Payment\" || transaction.category === \"Transfer\") {\n      toRemove.push(transaction);\n    }\n  });\n\n  var filteredTransactions = _.filter(transactions, function (transaction) {\n    return !toRemove.includes(transaction);\n  });\n\n  var totalSpent = _.chain(filteredTransactions).map(function (transaction) {\n    if (moment(transaction.date).isAfter(date)) {\n      return transaction.amount;\n    }\n  }).sum().value();\n\n  return totalSpent.toFixed(2);\n};\nexport var calculateNet = function calculateNet(transactions) {\n  var income = calculateIncome(transactions);\n  var expenses = calculateExpenses(transactions);\n  return (income - expenses).toFixed(2);\n}; // =====================================================================================================================================================================","map":{"version":3,"sources":["/Users/kylewiltshire/Documents/projects/2019/Javascript/playground/monten/client/src/helpers/snapshotHelpers.js"],"names":["_","moment","calculateIncome","transactions","date","income","chain","filter","transaction","todaysDate","format","oneWeekAgo","subtract","calendar","oneMonthAgo","oneYearAgo","category","isAfter","map","amount","sum","value","toFixed","calculateExpenses","toRemove","push","filteredTransactions","includes","totalSpent","calculateNet","expenses"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport moment from \"moment\";\n\n/**\n * NET SPEND HELPERS ==========================================================================================================================================\n */\nexport const calculateIncome = (transactions, date) => {\n  const income = _.chain(transactions)\n    .filter(transaction => {\n      const todaysDate = moment().format(\"MM/DD/YYYY\");\n      const oneWeekAgo = moment()\n        .subtract(7, \"days\")\n        .calendar();\n      const oneMonthAgo = moment()\n        .subtract(30, \"days\")\n        .calendar();\n      const oneYearAgo = moment()\n        .subtract(365, \"days\")\n        .calendar();\n      if (\n        transaction.category === \"Paycheck\" &&\n        moment(transaction.date).isAfter(date)\n      )\n        return transaction;\n    })\n    .map(transaction => {\n      return transaction.amount;\n    })\n    .sum()\n    .value();\n\n  return income.toFixed(2);\n};\n\nexport const calculateExpenses = (transactions, date) => {\n  // TO DO find a way to refactor;\n  const toRemove = [];\n\n  const todaysDate = moment().format(\"MM/DD/YYYY\");\n  const oneWeekAgo = moment()\n    .subtract(7, \"days\")\n    .calendar();\n  const oneMonthAgo = moment()\n    .subtract(30, \"days\")\n    .calendar();\n  const oneYearAgo = moment()\n    .subtract(365, \"days\")\n    .calendar();\n\n  _.map(transactions, transaction => {\n    if (\n      transaction.category === \"Credit Card Payment\" ||\n      transaction.category === \"Transfer\"\n    ) {\n      toRemove.push(transaction);\n    }\n  });\n\n  const filteredTransactions = _.filter(transactions, transaction => {\n    return !toRemove.includes(transaction);\n  });\n\n  const totalSpent = _.chain(filteredTransactions)\n\n    .map(transaction => {\n      if (moment(transaction.date).isAfter(date)) {\n        return transaction.amount;\n      }\n    })\n    .sum()\n    .value();\n\n  return totalSpent.toFixed(2);\n};\n\nexport const calculateNet = transactions => {\n  const income = calculateIncome(transactions);\n  const expenses = calculateExpenses(transactions);\n\n  return (income - expenses).toFixed(2);\n};\n\n// =====================================================================================================================================================================\n"]},"metadata":{},"sourceType":"module"}