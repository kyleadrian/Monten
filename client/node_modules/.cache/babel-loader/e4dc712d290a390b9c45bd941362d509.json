{"ast":null,"code":"import _classCallCheck from \"/Users/kylewiltshire/Documents/projects/2019/Javascript/playground/monten/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kylewiltshire/Documents/projects/2019/Javascript/playground/monten/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kylewiltshire/Documents/projects/2019/Javascript/playground/monten/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kylewiltshire/Documents/projects/2019/Javascript/playground/monten/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kylewiltshire/Documents/projects/2019/Javascript/playground/monten/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kylewiltshire/Documents/projects/2019/Javascript/playground/monten/client/src/components/Transactions/TransactionDetail.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchTransaction } from \"../../actions\";\nimport Modal from \"../Modal\";\n\nvar TransactionDetail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TransactionDetail, _Component);\n\n  function TransactionDetail() {\n    _classCallCheck(this, TransactionDetail);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TransactionDetail).apply(this, arguments));\n  }\n\n  _createClass(TransactionDetail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchTransaction(this.props.match.params.id);\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      if (!this.props.transaction) {\n        return \"Could not get transaction details\";\n      }\n\n      return \"Date of purchase: \".concat(this.props.transaction.date, \"\\n            Description: \").concat(this.props.transaction.description, \"\\n            Category: \").concat(this.props.transaction.category, \"\\n            Amount: \").concat(this.props.transaction.amount, \"\\n    \");\n    }\n  }, {\n    key: \"renderActions\",\n    value: function renderActions() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Edit Transaction\"), React.createElement(\"button\", {\n        className: \"ui button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Close\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Modal, {\n        header: \"Transaction Details\",\n        content: this.renderContent(),\n        actions: this.renderActions(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return TransactionDetail;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    transaction: state.transaction[ownProps.match.parans.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchTransaction: fetchTransaction\n})(TransactionDetail);","map":{"version":3,"sources":["/Users/kylewiltshire/Documents/projects/2019/Javascript/playground/monten/client/src/components/Transactions/TransactionDetail.js"],"names":["React","Component","connect","fetchTransaction","Modal","TransactionDetail","props","match","params","id","transaction","date","description","category","amount","renderContent","renderActions","mapStateToProps","state","ownProps","parans"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,OAAOC,KAAP,MAAkB,UAAlB;;IAEMC,iB;;;;;;;;;;;;;wCACgB;AAClB,WAAKC,KAAL,CAAWH,gBAAX,CAA4B,KAAKG,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAApD;AACD;;;oCAEe;AACd,UAAI,CAAC,KAAKH,KAAL,CAAWI,WAAhB,EAA6B;AAC3B,eAAO,mCAAP;AACD;;AAED,yCAA4B,KAAKJ,KAAL,CAAWI,WAAX,CAAuBC,IAAnD,wCACuB,KAAKL,KAAL,CAAWI,WAAX,CAAuBE,WAD9C,qCAEoB,KAAKN,KAAL,CAAWI,WAAX,CAAuBG,QAF3C,mCAGkB,KAAKP,KAAL,CAAWI,WAAX,CAAuBI,MAHzC;AAKD;;;oCAEe;AACd,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CADF;AAMD;;;6BAEQ;AACP,aACE,oBAAC,KAAD;AACE,QAAA,MAAM,EAAC,qBADT;AAEE,QAAA,OAAO,EAAE,KAAKC,aAAL,EAFX;AAGE,QAAA,OAAO,EAAE,KAAKC,aAAL,EAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD;;;;EAlC6Bf,S;;AAqChC,IAAMgB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,SAAO;AACLT,IAAAA,WAAW,EAAEQ,KAAK,CAACR,WAAN,CAAkBS,QAAQ,CAACZ,KAAT,CAAea,MAAf,CAAsBX,EAAxC;AADR,GAAP;AAGD,CAJD;;AAKA,eAAeP,OAAO,CACpBe,eADoB,EAEpB;AAAEd,EAAAA,gBAAgB,EAAhBA;AAAF,CAFoB,CAAP,CAGbE,iBAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchTransaction } from \"../../actions\";\nimport Modal from \"../Modal\";\n\nclass TransactionDetail extends Component {\n  componentDidMount() {\n    this.props.fetchTransaction(this.props.match.params.id);\n  }\n\n  renderContent() {\n    if (!this.props.transaction) {\n      return \"Could not get transaction details\";\n    }\n\n    return `Date of purchase: ${this.props.transaction.date}\n            Description: ${this.props.transaction.description}\n            Category: ${this.props.transaction.category}\n            Amount: ${this.props.transaction.amount}\n    `;\n  }\n\n  renderActions() {\n    return (\n      <React.Fragment>\n        <button className=\"ui button primary\">Edit Transaction</button>\n        <button className=\"ui button\">Close</button>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal\n        header=\"Transaction Details\"\n        content={this.renderContent()}\n        actions={this.renderActions()}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    transaction: state.transaction[ownProps.match.parans.id]\n  };\n};\nexport default connect(\n  mapStateToProps,\n  { fetchTransaction }\n)(TransactionDetail);\n"]},"metadata":{},"sourceType":"module"}